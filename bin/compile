#!/usr/bin/env bash
# Build pack:
# bin/compile <build-dir> <cache-dir>

# Buildpack         => browser -> /app/tmp/cache/pub-cache/hosted/pub.dartlang.org/browser-0.9.0/lib
# Default pub get   => browser -> /app/.pub-cache/hosted/pub.dartlang.org/browser-0.9.0/lib
# Cache directory   => tmp/repo.git/.cache/pub-cache/hosted/pub.dartlang.org/browser-0.9.0/lib

# print out to console.
function message {
  echo "$1"
  sync
}

# fail fast
set -e
unset GIT_DIR

mkdir -p "$1" "$2"
BUILD_DIR=$(cd "$1/" && pwd)
CACHE_DIR=$(cd "$2/" && pwd)

# the directory in which the packages will be stored
PACKAGES_DIR="tmp/repo.git/.cache"

# this variable is used by pub to determine the package install location
PUB_CACHE="$CACHE_DIR/pub-cache"
# PUB_CACHE="/app/tmp/repo.git/.cache/pub-cache"
export PUB_CACHE
mkdir -p $PUB_CACHE

message "*** Cache dir is: $CACHE_DIR"
message "*** Pub cache is: $PUB_CACHE"
message "*** Package dir is: $PACKAGES_DIR"

MACHINE=`uname -a`
message "*** Machine is: $MACHINE"

# if no build number is set, download latest
if [ -z "$BUILD" ]; then
    BUILD="latest"
fi

if [ -z "$ARCHIVE" ]; then
    ARCHIVE="http://commondatastorage.googleapis.com/dart-editor-archive-integration"
fi

if [ -z "$DART_SDK_URL" ]; then
    DART_SDK_URL="$ARCHIVE/$BUILD/dartsdk-linux-64.tar.gz"
fi

cd $BUILD_DIR
mkdir -p $PACKAGES_DIR

message "*** Installing Dart VM via URL $DART_SDK_URL"
cd $CACHE_DIR
curl -L $DART_SDK_URL -o - | tar xzf -

message "*** Copy Dart binaries to app root"
cp -r $CACHE_DIR/dart-sdk $BUILD_DIR

# we need to copy the sdk into the /app folder in order for the sdk libraries to be referenced correctly
# reason being that the /tmp folder will be deleted after build, and /app resembles the location of the ready built app
cp -r $CACHE_DIR/dart-sdk /app

DART_BIN=`ls -l /app/dart-sdk/bin/dart`
message "*** Dart cmd found at $DART_BIN"

CAN_DART_RUN=`/app/dart-sdk/bin/dart --version`
message "*** Dart reports version: $CAN_DART_RUN"

message "*** Everything is alright up to now. Installing packages..."

cd $BUILD_DIR

for filename in `find . -name pubspec.yaml | grep -v dart-sdk | grep -v pub-cache`; do
    pub_dir=`dirname $filename`
    message "*** Found pubspec.yaml in $pub_dir"
    cd $BUILD_DIR/$pub_dir

    # start pub from the /app folder to have correct symlink paths
    /app/dart-sdk/bin/pub get
done

# move packages from cache directory into build directory
message "*** Copying downloaded packages from $CACHE_DIR to $BUILD_DIR/$PACKAGES_DIR"
cd $CACHE_DIR
cp -r $CACHE_DIR/pub-cache $BUILD_DIR/$PACKAGES_DIR
# mv $CACHE_DIR/pub-cache $BUILD_DIR/$PACKAGES_DIR

# if [ -d '/app/tmp/repo.git/.cache/pub-cache/hosted/pub.dartlang.org/http-0.9.0' ]; then 
#     message "*** Package http 0.9.0 checks in."
# else 
#     message "*** Package http 0.9.0 went missing in action."
# fi


# # run Dart build script
# cd $BUILD_DIR
# if [ -e "build.dart" ]; then
# 	message "*** Run Dart build script (build.dart --deploy)"
# 	/app/dart-sdk/bin/dart --package-root=packages/ build.dart --deploy
# fi
