#!/usr/bin/env bash
# Build pack:
# bin/compile <build-dir> <cache-dir>

# print out to console.
function message {
  echo "$1"
  sync
}

# fail fast
set -e
unset GIT_DIR

mkdir -p "$1" "$2"
BUILD_DIR=$(cd "$1/" && pwd)
CACHE_DIR=$(cd "$2/" && pwd)

# this variable is used by pub to determine the package install location
<<<<<<< HEAD
#PUB_CACHE="$CACHE_DIR/pub-cache"
PUB_CACHE="/app/tmp/repo.git/.cache/pub-cache"
=======
PUB_CACHE="/app/pub-cache"
>>>>>>> upstream/master
export PUB_CACHE
mkdir -p $PUB_CACHE

message "*** Cache dir is: $CACHE_DIR"
message "*** Pub cache is: $PUB_CACHE"
message "*** Package dir is: $PACKAGES_DIR"

MACHINE=`uname -a`
message "*** Machine is: $MACHINE"

if [ -z "$DART_SDK_URL" ]; then
    message "ERROR: you must specify DART_SDK_URL to a Dart SDK for Linux. See README for this buildpack."
    exit 1
fi

cd $BUILD_DIR
<<<<<<< HEAD
mkdir -p $PACKAGES_DIR

message "*** Installing Dart VM via URL $DART_SDK_URL"
cd $CACHE_DIR
curl -L $DART_SDK_URL -o - | tar xzf -

message "*** Copy Dart binaries to app root"
=======

message "-----> Installing Dart VM via URL $DART_SDK_URL"

cd $CACHE_DIR
curl -L $DART_SDK_URL -o - | tar xzf -

message "-----> Copy Dart binaries to app root"
>>>>>>> upstream/master
cp -r $CACHE_DIR/dart-sdk $BUILD_DIR

# we need to copy the sdk into the /app folder in order for the sdk libraries
# to be referenced correctly
# reason being that the /tmp folder will be deleted after build, and /app
# resembles the location of the ready built app
cp -r $CACHE_DIR/dart-sdk /app

DART_BIN=`ls -l /app/dart-sdk/bin/dart`
message "*** Dart cmd found at $DART_BIN"

CAN_DART_RUN=`/app/dart-sdk/bin/dart --version`
<<<<<<< HEAD
message "*** Dart reports version: $CAN_DART_RUN"

message "*** Everything is alright up to now. Installing packages..."
=======
message "-----> Dart reports version: $CAN_DART_RUN"
>>>>>>> upstream/master

cd $BUILD_DIR

for filename in `find . -name pubspec.yaml | grep -v dart-sdk | grep -v pub-cache`; do
    pub_dir=`dirname $filename`
    message "*** Found pubspec.yaml in $BUILD_DIR/$pub_dir"
    cd $BUILD_DIR/$pub_dir

<<<<<<< HEAD
    # start pub from the /app folder to have correct symlink paths
=======
    message "*** Running pub get"

    #start pub from the /app folder to have correct symlink paths
>>>>>>> upstream/master
    /app/dart-sdk/bin/pub get

<<<<<<< HEAD
# move packages from cache directory into build directory
message "*** Copying downloaded packages from $CACHE_DIR to $BUILD_DIR/$PACKAGES_DIR"
cd $CACHE_DIR
cp -r $CACHE_DIR/pub-cache $BUILD_DIR/$PACKAGES_DIR
# mv $CACHE_DIR/pub-cache $BUILD_DIR/$PACKAGES_DIR

# if [ -d '/app/tmp/repo.git/.cache/pub-cache/hosted/pub.dartlang.org/http-0.9.0' ]; then 
#     message "*** Package http 0.9.0 checks in."
# else 
#     message "*** Package http 0.9.0 went missing in action."
# fi


# # run Dart build script
# cd $BUILD_DIR
# if [ -e "build.dart" ]; then
# 	message "*** Run Dart build script (build.dart --deploy)"
# 	/app/dart-sdk/bin/dart --package-root=packages/ build.dart --deploy
# fi
=======
    message "*** Running pub build"

    if [[ -z "$DART_BUILD_CMD" ]]
    then
        message 'Building with "pub build"'
        /app/dart-sdk/bin/pub build
    else
        message "Building with \"$DART_BUILD_CMD\""
        eval $DART_BUILD_CMD
    fi

done

# I think heroku deletes all the contents of /app and replaces it with
# whatever is in $BUILD_DIR, so copy over the pub-cache. Why not put it in
# $BUILD_DIR in the first place? because we need symlinks setup correctly.
cp -R $PUB_CACHE $BUILD_DIR/pub-cache
message `ls -l $BUILD_DIR/pub-cache`
>>>>>>> upstream/master
